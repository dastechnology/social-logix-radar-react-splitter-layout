permissions:
  id-token: write
  contents: read

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'

jobs:
  set-environment-tag:
    runs-on: ubuntu-latest
    outputs:
      ENVIRONMENT_TAG: ${{ steps.set-env-vars.outputs.ENVIRONMENT_TAG }}
    steps:
      - name: Set environment
        id: set-env-vars
        run: |
          if [[ "${{ github.ref }}" == *"-dev-"* ]]; then
            echo "APP_ENVIRONMENT=dev" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == *"-qa-"* ]]; then
            echo "APP_ENVIRONMENT=qa" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == *"-prod-"* ]]; then
            echo "APP_ENVIRONMENT=prod" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == *"-mgmt-"* ]]; then
            echo "APP_ENVIRONMENT=mgmt" >> $GITHUB_OUTPUT
          else
            echo "APP_ENVIRONMENT=dev" >> $GITHUB_OUTPUT  # Default to dev
          fi

  set-ids:
    runs-on: ubuntu-latest
    needs: set-environment-tag
    environment: mgmt
    outputs:
      CLIENT_ID: ${{ steps.set-ids.outputs.CLIENT_ID }}
      SUBSCRIPTION_ID: ${{ steps.set-ids.outputs.SUBSCRIPTION_ID }}
    steps:
      - name: Set Client ID and Subscription ID based on environment
        id: set-ids
        run: |
          echo "CLIENT_ID=${{ vars.AZURE_CLIENT_ID_NEW }}" >> $GITHUB_OUTPUT
          echo "SUBSCRIPTION_ID=${{ vars.AZURE_SUBSCRIPTION_ID_NEW }}" >> $GITHUB_OUTPUT

  build-and-deploy:
    needs: 
      - set-environment-tag
      - set-ids
    uses: dastechnology/tlz-infra-pipelines/.github/workflows/called-workflow-acr.yml@main
    with:
      DOCKERFILE_PATH: './Dockerfile'
      IMAGE_REPOSITORY: 'radar-react-splitter-layout'
      NAMESPACE: 'social-logix'
      AZURE_CLIENT_ID: ${{ needs.set-ids.outputs.CLIENT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ needs.set-ids.outputs.SUBSCRIPTION_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID_NEW }}
      #BUILD_ARGS: '--build-arg ARG1=value1 --build-arg ARG2=value2'
      BUILD_OS: 'ubuntu-latest'
      GIT_TAG: ${{ github.ref_type == 'tag' && github.ref_name || '' }}
      GITHUB_DEPLOYMENT_ENVIRONMENT: 'mgmt'